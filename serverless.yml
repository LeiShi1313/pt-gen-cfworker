service: ptgen-lambda

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-bundle

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 18000
      inMemory: true
      migrate: true
    # Comment if you don't have a DynamoDB running locally
      noStart: true
    migration:
      dir: offline/migrations

provider:
  name: aws
  region: us-west-1
  runtime: nodejs14.x
  memorySize: 256
  lambdaHashingVersion: '20201221'
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  ptgen:
    handler: ptgen.handle
    events:
      - http: ANY /
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    PTGenDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
